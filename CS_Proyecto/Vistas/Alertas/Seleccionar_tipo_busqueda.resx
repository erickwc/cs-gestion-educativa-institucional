<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAABOFJREFUeF7tnLtuFDEUhvcReATehLTQkAJRJmmpEpEWJTSgVAQpDRTRAhWCgoYW
        pUzJpUSglUiyu2JnM49w8O+1kxlzvJnZGV/mcqSviMfrGf859vFtZhDSRind+pPQ+jSl7cmchpNLOhGM
        JHMig3R8SV9lHpH3YkZPz2a0hjJUce03Ldj5jF5aRFoVlDVE2a0UFJ4yndMnUck0U2mXSDHV7Ztp8IRJ
        SvuiMr5E4xiJZ9gU3FaPFb9FIpwJhNxXjxivTRLakg/LVyIGpEeqx43H0ERUdOQeOjpkfxxLs1ZDkJia
        a1HSoN6Ivk6Id8g8WKMQ3nioquTP4P7jRAxqmQdqInKA7qtJy/4u7kCxKggwbkVssXgadyJ2QDxN/SJ2
        SDxNvSK2KWAUBYGlloWJNgxVVqXyEEdNzdjCu8J4TjtKjnKm+r0mzjDqBjOW8v2hWr/jCuweYp6vZClm
        fdNlKDNvFj/o0pClKKNCUVkojcVQroDOg40sJRNvKnD03mcnXeqFMfR9p9+JHj0huvOQaOOx+Psbny8U
        S71QZAjqfT9+Ej14tBBPc3eT6PcZnz8QqZIrbxcJrTOZvfL+c148zfFHPn8wZrSmZLs2IeAbNrMn4GW7
        z3kB9w7j8kKMkZVsC5NbkUxGH0CYo3dE97Z48TRo2sjHlRGAfDAJ1XzR5yFQcILZgJD4HVeeT6Yp3Vfy
        hWm+XMCAF+69WPSFAH0f/jbzxSAizvco+cJEX1OUg1f2fg5iHb3N54fn2vJquOs1MpLihej/TDHgbVw+
        k+MP+d9xfWL2unmtbmQ/iJNT3EVX/DrPe1/ZwABP1b/lxoj6Gsimu0D2gxhZcxddkR3rQUguzzLwD8hG
        bHOMqNNBNt0F47+04z2A7D6zV74o2S4A5WWv6XSQTXfEcOD7UNDG7nUFV53n4ne6DNOLdTrIpjshoRPv
        O251VBDN2FaOLd0RIwxhvO571FVBWzm2dEdIAbkLzqirgrZybOmu6AWsSOsE1NPAooPzqrROQN9gGON1
        HlxXxesqpyJp6wT02YSnYgjofSBtq3hZbOXY0p2AgbTvqVxdFbSVY0t3xHCACTFzwRl1VdBWDrZENdl0
        F8gtTp/L+dgcslW8LNlyUC6XxznYnfO1oGqKpyu+KlxZ3H1dcrWx5DoSmyvQrjh4zd/fEYslfdgYL0Dz
        mWqBq6wruPs7Yqjkc7+tCQ/0BXd/F+S2NVU/2B/nLcFV/6dtHMGRXswesMJsEt3ZmGzz1YaQzGT0ypdT
        vl8LvYlukmu+WRMXgzdj9GNaOOy+Reh919HXNN9bnDbgcfDGmE5kXbHssHkfTG7k5nfoYvHCKFl2vFeb
        8sKgR30jxd73mda/aMNQ9gMVvhdaY2aaGEd6i5h6Z6QPKNBglZcNYXjVkymwW1T9tozrlZqYQd2VDKsb
        orL8rgpzgzaDQ1dKguqm+sMuDW36L3dUoP92TAXciaetxSK6F08bbtSmwCJP6foSL2ttGOKgDv8tz/s0
        NW9u4owlla8pxGCySTfpMymJmOeHaLI3mfLGmAMMAkW4z34WNSw8yoflKxGCFM8UtK8ra2giEXhk84Tj
        DCcfPJ5DTLF+h21adfv2GDwhI2adnjnCC9Aou/HeVsZQWXiK3MhKaIjoqF4944ZFEHwkI6jIO01pO7xg
        g8E/1kfdERimBywAAAAASUVORK5CYII=
</value>
  </data>
</root>